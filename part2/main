package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"github.com/gin-gonic/gin"
	"net/http"
)

type QQMessage struct {
	UserID  int    `json:"user_id"`
	Message string `json:"message"`
}

func SendMessage(message string, number int) {
	client := &http.Client{}
	msg := QQMessage{
		UserID:  number,
		Message: message,
	}
	RequestBody := new(bytes.Buffer)
	err := json.NewEncoder(RequestBody).Encode(msg)
	if err != nil {
		fmt.Println(err)
		return
	}
	Request, err := http.NewRequest("POST", "http://175.24.41.84:5700/send_msg", RequestBody)
	if err != nil {
		fmt.Println(err)
		return
	}
	Request.Header.Set("Content-Type", "application/json")
	body,err = client.Do(Request)
	if err != nil {
		fmt.Println(err)
		return
	}
}

func HandleRequest(ctx *gin.Context) {
	fmt.Println("1")
	var Request QQMessage
	err := ctx.BindJSON(&Request)
	if err != nil {
		fmt.Println(err)
		return
	}
	HandlePrivateMessage(Request)
}

func HandlePrivateMessage(Request QQMessage) {
	cur := Request.Message
	fmt.Println("2")
	if cur == "help" {
		fmt.Println("33")
		SendMessage("OK", Request.UserID)
		return
	}
	if cur == "good" {
		SendMessage("Thanks", Request.UserID)
	return
    }
}

func main() {
	SendMessage("我上线啦", 1695303928)
	r := gin.Default()
	r.POST("/",HandleRequest)
	_ = r.Run()
}
